name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      # 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup application.properties
        run: |
          echo "${{ secrets.CI_APPLICATION }}" > ./src/main/resources/application.properties

      # gradlew 권한 추가
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      # JDK 21 세팅
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Gradle 캐시 복원
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-


      # Gradle test and build
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

      - name: Test With Gradle Wrapper
        run: ./gradlew test

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      # checkstyle 검사
      - name: Run java checkstyle
        uses: nikitasavinov/checkstyle-action@0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: 'github-pr-check'
          tool_name: 'Checkstyle'
          checkstyle_config: ./config/naver-checkstyle-rules.xml
          properties_file: ./config/naver-checkstyle-suppressions.xml

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Docker 이미지 빌드 및 push
      - name: Build and Push Docker image
        if: github.event_name == 'push'
        run: |
          echo "${{ secrets.DOCKER_APPLICATION }}" > ./src/main/resources/application.properties
          docker buildx create --use
          docker buildx build . \
            --platform linux/amd64,linux/arm64 \
            -t ${{ secrets.DOCKER_USERNAME }}/sonisori-be:latest \
            --push
